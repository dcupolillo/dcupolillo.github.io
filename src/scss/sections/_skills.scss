@use '../abstract/variables' as var;
@use '../animations';
@use '../abstract/mixins' as mx;
@use '../components/icons';

.skills-section {
    @include mx.flex-center(column);
    min-height: 100vh;
    padding: 25px;
  
    .glass-container {
        width: 800px;
        height: 500px;
        max-width: 85%;
        @include mx.flex-center(column);
      
        h1 {
            font-size: 2.5em;
            margin-bottom: 40px;
            position: relative;
            text-align: center;
            width: max-content;

            &:after {
                position: absolute;
                content: "";
                top: 110%;
                height: 5px;
                left: 0%;
                width: 100%;
                transform: translateX(0%);
                background: linear-gradient(
                    to right, transparent, var.$primary-color, transparent);
            }
        }

        .skills-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 1fr 1fr;
            gap: 30px;
            width: 100%;
            height:80%;

            @media screen and (max-width: 768px) {
                grid-template-columns: 1fr;
                grid-template-rows: repeat(4, auto);
                gap: 20px;
            }

            .skill-container {
                @include mx.glass-effect();
                border-radius: 12px;
                padding: 20px; // Reduced from 25px
                border: 2px solid rgba(var.$primary-color, 0.2);
                transition: all 0.3s ease-in-out;
                opacity: 0;
                background: rgba(var.$primary-color, 0.1);
                animation: fadeInFromBottom 0.8s ease-out forwards;

                // Staggered animation delays
                &:nth-child(1) { animation-delay: 0.1s; }
                &:nth-child(2) { animation-delay: 0.2s; }
                &:nth-child(3) { animation-delay: 0.3s; }
                &:nth-child(4) { animation-delay: 0.4s; }

                &:hover {
                    transform: translateY(-5px);
                    border-color: var.$primary-color;
                    background: rgba(var.$primary-color, 0.1);
                }

                .skill-title {
                    font-size: 1.3em;
                    color: var.$steel-pink;
                    margin-bottom: 15px;
                    text-align: center;
                    font-weight: 600;
                    margin-top: auto;
                }

                .skill-list {
                    display: grid;
                    grid-template-columns: repeat(4, minmax(20px, 1fr));
                    gap: 15px;
                    padding: 15px; // Reduced from 20px
                    margin: 0;
                    list-style: none;

                    li {
                        position: relative;
                        display: flex;
                        justify-content: center;
                        align-items: center;
                        height: 60px;
                        width: 60px;
                        transition: all 0.3s ease-in-out;
                        cursor: pointer;

                        // Icon styling using your established icon system
                        &.python::before {
                            @include icons.icon('python', 32px);
                            content: '';
                        }

                        &.numpy::before {
                            @include icons.icon('numpy', 32px);
                            content: '';
                        }

                        &.pandas::before {
                            @include icons.icon('pandas', 32px);
                            content: '';
                        }

                        &.scipy::before {
                            @include icons.icon('scipy', 32px);
                            content: '';
                        }

                        &.scikit-learn::before {
                            @include icons.icon('scikitlearn', 32px);
                            content: '';
                        }

                        &.pytorch::before {
                            @include icons.icon('pytorch', 32px);
                            content: '';
                        }

                        &.opencv::before {
                            @include icons.icon('opencv', 32px);
                            content: '';
                        }

                        &.anaconda::before {
                            @include icons.icon('anaconda', 32px);
                            content: '';
                        }

                        &.arduino::before {
                            @include icons.icon('arduino', 32px);
                            content: '';
                        }

                        &.microsoft-visual-studio::before {
                            background-image: url("./src/assets/icons/visual-studio.svg");
                            background-size: contain;
                            background-repeat: no-repeat;
                            background-position: center;
                            width: 32px;
                            height: 32px;
                            display: inline-block;
                            transition: all 0.3s ease-in-out;
                            content: '';
                        }

                        &.git-hub::before {
                            @include icons.icon('github', 32px);
                            content: '';
                        }

                        &.imagej::before {
                            @include icons.icon('imagej', 32px);
                            content: '';
                        }

                        &.illustrator::before {
                            background-image: url("./src/assets/icons/illustrator.svg");
                            background-size: contain;
                            background-repeat: no-repeat;
                            background-position: center;
                            width: 32px;
                            height: 32px;
                            display: inline-block;
                            transition: all 0.3s ease-in-out;
                            content: '';
                        }

                        &.designspark-mechanical::before {
                            background-image: url("./src/assets/icons/RS.svg");
                            background-size: contain;
                            background-repeat: no-repeat;
                            background-position: center;
                            width: 32px;
                            height: 32px;
                            display: inline-block;
                            transition: all 0.3s ease-in-out;
                            filter: brightness(0) invert(1);
                            content: '';
                        }

                        &.spyder::before {
                            @include icons.icon('spyderide', 32px);
                            content: '';
                        }

                        // Tooltip styling following your design system
                        &::after {
                            content: attr(data-skill);
                            position: absolute;
                            bottom: -35px;
                            left: 50%;
                            transform: translateX(-50%);
                            background: rgba(var.$background-color, 0.9);
                            color: var.$text-color;
                            padding: 5px 10px;
                            border-radius: 6px;
                            font-size: 0.8em;
                            white-space: nowrap;
                            opacity: 0;
                            pointer-events: none;
                            transition: all 0.3s ease-in-out;
                            border: 1px solid rgba(var.$primary-color, 0.3);
                        }

                        &:hover {
                            transform: translateY(-3px) scale(1.05);
                            border-color: var.$primary-color;
                            background: rgba(var.$primary-color, 0.2);

                            &::before {
                                filter: drop-shadow(0 0 8px var.$primary-color);
                            }

                            &::after {
                                opacity: 1;
                                transform: translateX(-50%) translateY(-5px);
                            }
                        }
                    }
                }
            }
        }
    }
}